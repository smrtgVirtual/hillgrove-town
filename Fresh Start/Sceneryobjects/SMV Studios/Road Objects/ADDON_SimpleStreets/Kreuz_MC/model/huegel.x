xof 0303txt 0032


template VertexDuplicationIndices { 
  <b8d65549-d7c9-4995-89cf-53a9a8b031e3>
  DWORD nIndices;
  DWORD nOriginalVertices;
  array DWORD indices[nIndices];
 }
 template XSkinMeshHeader {
  <3cf169ce-ff7c-44ab-93c0-f78f62d172e2>
  WORD nMaxSkinWeightsPerVertex;
  WORD nMaxSkinWeightsPerFace;
  WORD nBones;
 }
 template SkinWeights {
  <6f0d123b-bad2-4167-a0d0-80224f25fabb>
  STRING transformNodeName;
  DWORD nWeights;
  array DWORD vertexIndices[nWeights];
  array float weights[nWeights];
  Matrix4x4 matrixOffset;
 }

Frame RootFrame {

  FrameTransformMatrix {
    1.000000,0.000000,0.000000,0.000000,
    0.000000,0.000000,1.000000,0.000000,
    0.000000,1.000000,0.000000,0.000000,
    0.000000,0.000000,0.000000,1.000000;;
  }
  Frame Cube {

    FrameTransformMatrix {
      1.000000,0.000000,0.000000,0.000000,
      0.000000,1.000000,0.000000,0.000000,
      0.000000,0.000000,1.000000,0.000000,
      0.000000,0.000000,0.000000,1.000000;;
    }
Mesh {
36;
1.000000; 1.000000; 0.452900;,
-1.000000; 1.000000; 0.452900;,
-1.000000; -1.000000; 0.452900;,
1.000000; -1.000000; 0.705000;,
-1.000000; 1.000000; 0.452900;,
1.000000; 1.000000; 0.452900;,
1.000000; 3.086200; 0.000000;,
-1.000000; 3.086200; 0.000000;,
1.000000; -1.000000; 0.705000;,
-1.000000; -1.000000; 0.452900;,
-1.000000; -3.184600; 0.000000;,
1.000000; -3.184600; 0.000000;,
-1.000000; -1.000000; 0.452900;,
-1.000000; 1.000000; 0.452900;,
-2.830300; 1.000000; 0.000000;,
-2.830300; -1.000000; 0.000000;,
-1.000000; 1.000000; 0.452900;,
-1.000000; 3.086200; 0.000000;,
-2.830300; 3.086200; 0.000000;,
-2.830300; 1.000000; 0.000000;,
-1.000000; -3.184600; 0.000000;,
-1.000000; -1.000000; 0.452900;,
-2.830300; -1.000000; 0.000000;,
-2.830300; -3.184600; 0.000000;,
1.000000; 1.000000; 0.452900;,
1.000000; -1.000000; 0.705000;,
2.909000; -1.000000; 0.000000;,
2.909000; 1.000000; 0.000000;,
1.000000; 3.086200; 0.000000;,
1.000000; 1.000000; 0.452900;,
2.909000; 1.000000; 0.000000;,
2.909000; 3.086200; 0.000000;,
1.000000; -1.000000; 0.705000;,
1.000000; -3.184600; 0.000000;,
2.909000; -3.184600; 0.000000;,
2.909000; -1.000000; 0.000000;;
9;
4; 0, 3, 2, 1;,
4; 4, 7, 6, 5;,
4; 8, 11, 10, 9;,
4; 12, 15, 14, 13;,
4; 16, 19, 18, 17;,
4; 20, 23, 22, 21;,
4; 24, 27, 26, 25;,
4; 28, 31, 30, 29;,
4; 32, 35, 34, 33;;
  MeshMaterialList {
    1;
    9;
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0;;
  Material Material {
    0.800000; 0.800000; 0.800000;1.0;;
    0.500000;
    0.000000; 0.000000; 0.000000;;
    0.0; 0.0; 0.0;;
  }  //End of Material
    }  //End of MeshMaterialList
  MeshNormals {
36;
    -0.062785; 0.062785; 0.996050;,
    -0.062785; 0.062785; 0.996050;,
    -0.062785; 0.062785; 0.996050;,
    -0.062785; 0.062785; 0.996050;,
    0.000000; 0.212154; 0.977236;,
    0.000000; 0.212154; 0.977236;,
    0.000000; 0.212154; 0.977236;,
    0.000000; 0.212154; 0.977236;,
    -0.060818; -0.255707; 0.964839;,
    -0.060818; -0.255707; 0.964839;,
    -0.060818; -0.255707; 0.964839;,
    -0.060818; -0.255707; 0.964839;,
    -0.240199; 0.000000; 0.970724;,
    -0.240199; 0.000000; 0.970724;,
    -0.240199; 0.000000; 0.970724;,
    -0.240199; 0.000000; 0.970724;,
    -0.122079; 0.107107; 0.986724;,
    -0.122079; 0.107107; 0.986724;,
    -0.122079; 0.107107; 0.986724;,
    -0.122079; 0.107107; 0.986724;,
    -0.122141; -0.102334; 0.987223;,
    -0.122141; -0.102334; 0.987223;,
    -0.122141; -0.102334; 0.987223;,
    -0.122141; -0.102334; 0.987223;,
    0.289697; 0.060212; 0.955223;,
    0.289697; 0.060212; 0.955223;,
    0.289697; 0.060212; 0.955223;,
    0.289697; 0.060212; 0.955223;,
    0.117115; 0.107172; 0.987319;,
    0.117115; 0.107172; 0.987319;,
    0.117115; 0.107172; 0.987319;,
    0.117115; 0.107172; 0.987319;,
    0.179343; -0.156724; 0.971223;,
    0.179343; -0.156724; 0.971223;,
    0.179343; -0.156724; 0.971223;,
    0.179343; -0.156724; 0.971223;;
9;
4; 0, 3, 2, 1;,
4; 4, 7, 6, 5;,
4; 8, 11, 10, 9;,
4; 12, 15, 14, 13;,
4; 16, 19, 18, 17;,
4; 20, 23, 22, 21;,
4; 24, 27, 26, 25;,
4; 28, 31, 30, 29;,
4; 32, 35, 34, 33;;
}  //End of MeshNormals
  }  // End of the Mesh Cube 
  }  // SI End of the Object Cube 
}  // End of the Root Frame
